
import React from "react";
import { Fee } from "@/types/models";
import { FeeReceipt } from "@/types/feeTypes";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Download, Print, FileText } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

interface ReceiptGeneratorProps {
  isOpen: boolean;
  onOpenChange: (open: boolean) => void;
  fee: Fee;
  installmentId: string;
  paymentMethod: string;
}

export const ReceiptGenerator: React.FC<ReceiptGeneratorProps> = ({
  isOpen,
  onOpenChange,
  fee,
  installmentId,
  paymentMethod,
}) => {
  const { toast } = useToast();
  
  const installment = fee.installments.find(inst => inst.id === installmentId);
  
  if (!installment) return null;

  const receipt: FeeReceipt = {
    id: `RCP${Date.now()}`,
    feeId: fee.id,
    installmentId: installmentId,
    receiptNumber: `RCP-${new Date().getFullYear()}-${Date.now()}`,
    studentId: fee.studentId,
    studentName: fee.studentName,
    amount: installment.amount,
    paymentMethod: paymentMethod as any,
    generatedDate: new Date().toISOString().split("T")[0],
    generatedBy: "Admin", // This should come from auth context
  };

  const handleDownload = () => {
    const receiptContent = `
SCHOOL FEE RECEIPT
==================

Receipt Number: ${receipt.receiptNumber}
Date: ${new Date(receipt.generatedDate).toLocaleDateString()}

STUDENT DETAILS
---------------
Student ID: ${receipt.studentId}
Student Name: ${receipt.studentName}
Academic Year: ${fee.academicYear}

PAYMENT DETAILS
---------------
Amount Paid: ₹${receipt.amount.toLocaleString()}
Payment Method: ${receipt.paymentMethod.toUpperCase()}
Due Date: ${new Date(installment.dueDate).toLocaleDateString()}
Payment Date: ${installment.paidDate ? new Date(installment.paidDate).toLocaleDateString() : 'N/A'}

INSTALLMENT DETAILS
------------------
Installment Amount: ₹${installment.amount.toLocaleString()}
Status: ${installment.status.toUpperCase()}

Generated By: ${receipt.generatedBy}
Generated On: ${new Date().toLocaleString()}

Thank you for your payment!
    `;

    const blob = new Blob([receiptContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `Receipt-${receipt.receiptNumber}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Receipt Downloaded",
      description: "The fee receipt has been downloaded successfully.",
    });
  };

  const handlePrint = () => {
    const printWindow = window.open('', '_blank');
    if (printWindow) {
      printWindow.document.write(`
        <html>
          <head>
            <title>Fee Receipt - ${receipt.receiptNumber}</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; }
              .header { text-align: center; border-bottom: 2px solid #000; padding-bottom: 10px; }
              .section { margin: 20px 0; }
              .section h3 { border-bottom: 1px solid #ccc; padding-bottom: 5px; }
              .detail-row { display: flex; justify-content: space-between; margin: 5px 0; }
              .footer { text-align: center; margin-top: 30px; font-style: italic; }
            </style>
          </head>
          <body>
            <div class="header">
              <h1>SCHOOL FEE RECEIPT</h1>
              <h2>Receipt #${receipt.receiptNumber}</h2>
              <p>Date: ${new Date(receipt.generatedDate).toLocaleDateString()}</p>
            </div>
            
            <div class="section">
              <h3>Student Details</h3>
              <div class="detail-row"><span>Student ID:</span><span>${receipt.studentId}</span></div>
              <div class="detail-row"><span>Student Name:</span><span>${receipt.studentName}</span></div>
              <div class="detail-row"><span>Academic Year:</span><span>${fee.academicYear}</span></div>
            </div>
            
            <div class="section">
              <h3>Payment Details</h3>
              <div class="detail-row"><span>Amount Paid:</span><span>₹${receipt.amount.toLocaleString()}</span></div>
              <div class="detail-row"><span>Payment Method:</span><span>${receipt.paymentMethod.toUpperCase()}</span></div>
              <div class="detail-row"><span>Due Date:</span><span>${new Date(installment.dueDate).toLocaleDateString()}</span></div>
              <div class="detail-row"><span>Payment Date:</span><span>${installment.paidDate ? new Date(installment.paidDate).toLocaleDateString() : 'N/A'}</span></div>
            </div>
            
            <div class="footer">
              <p>Generated by: ${receipt.generatedBy}</p>
              <p>Generated on: ${new Date().toLocaleString()}</p>
              <p><strong>Thank you for your payment!</strong></p>
            </div>
          </body>
        </html>
      `);
      printWindow.document.close();
      printWindow.print();
    }

    toast({
      title: "Receipt Sent to Printer",
      description: "The fee receipt has been sent to the printer.",
    });
  };

  return (
    <Dialog open={isOpen} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-[600px]">
        <DialogHeader>
          <DialogTitle>Fee Receipt</DialogTitle>
          <DialogDescription>
            Payment receipt for {fee.studentName}
          </DialogDescription>
        </DialogHeader>
        
        <div className="space-y-6">
          <div className="bg-gray-50 p-4 rounded-lg">
            <div className="text-center border-b pb-4 mb-4">
              <h2 className="text-xl font-bold">SCHOOL FEE RECEIPT</h2>
              <p className="text-lg font-semibold">#{receipt.receiptNumber}</p>
              <p className="text-sm text-gray-600">
                Date: {new Date(receipt.generatedDate).toLocaleDateString()}
              </p>
            </div>
            
            <div className="grid grid-cols-2 gap-6">
              <div>
                <h3 className="font-semibold mb-2 border-b">Student Details</h3>
                <div className="space-y-1 text-sm">
                  <div className="flex justify-between">
                    <span>Student ID:</span>
                    <span>{receipt.studentId}</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Name:</span>
                    <span>{receipt.studentName}</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Academic Year:</span>
                    <span>{fee.academicYear}</span>
                  </div>
                </div>
              </div>
              
              <div>
                <h3 className="font-semibold mb-2 border-b">Payment Details</h3>
                <div className="space-y-1 text-sm">
                  <div className="flex justify-between">
                    <span>Amount:</span>
                    <span className="font-semibold">₹{receipt.amount.toLocaleString()}</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Method:</span>
                    <span>{receipt.paymentMethod.toUpperCase()}</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Due Date:</span>
                    <span>{new Date(installment.dueDate).toLocaleDateString()}</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Paid Date:</span>
                    <span>{installment.paidDate ? new Date(installment.paidDate).toLocaleDateString() : 'N/A'}</span>
                  </div>
                </div>
              </div>
            </div>
            
            <div className="mt-6 pt-4 border-t text-center text-sm text-gray-600">
              <p>Generated by: {receipt.generatedBy}</p>
              <p>Generated on: {new Date().toLocaleString()}</p>
              <p className="mt-2 font-semibold">Thank you for your payment!</p>
            </div>
          </div>
          
          <div className="flex justify-end space-x-2">
            <Button variant="outline" onClick={handleDownload}>
              <Download className="h-4 w-4 mr-2" />
              Download
            </Button>
            <Button variant="outline" onClick={handlePrint}>
              <Print className="h-4 w-4 mr-2" />
              Print
            </Button>
            <Button onClick={() => onOpenChange(false)}>
              <FileText className="h-4 w-4 mr-2" />
              Done
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};
